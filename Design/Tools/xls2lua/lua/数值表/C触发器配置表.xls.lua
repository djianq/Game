-- xls md5:2e88e559147bec5029a7589be248d782
return {
["触发器_配置表"] = {
		["A"] = {"mID_TRIGGER@ukey", "Id", 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 2001, "2002", "2003", "2004", "2005", "2006", "2007", "2008", "1010", "1011", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", },
		["B"] = {"mSTRING_ML@default", "名称", "放狗触发器", "延时放狗", "怪物死亡放狗", "怪物组死亡瞬移", "位移", "怪物死亡创建触发器", "创建多个触发器", "打开关卡主界面", "剧情触发器", "怪物血量为0播放剧情", "定时放行阻挡", "怪物血量为0放行阻挡", "通关触发器", "打开转盘", "挂机玩法结束处理", "事件触发器", "被动阻挡触发器", "联动AOI触发器", "放狗触发器-流沙", "加Buff触发器", "延时播放音效", "怪物死亡停止音效", "延时播放背景音乐", "怪物死亡停止背景音乐", "怪物身边创建多触发器", "触碰加血", "怪物晕倒播放剧情", "触碰加OP", "剧情触发器", "怪物死亡播放背景音乐", "怪物进入触发器", "攻击BUFF触发器", "防御BUFF触发器", "生命BUFF触发器", "镜头触发器", "场景跳转触发器", },
		["C"] = {"mSHAPE_ID@default", "造型", nil, nil, nil, nil, "18975", nil, nil, nil, nil, nil, nil, nil, "18973", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "40012", nil, "40012", "18972", nil, "18973", "40010", "40011", "40012", nil, "18973", },
		["D"] = {"bool@default", "特效填充", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "是", "是", nil, nil, nil, nil, "是", nil, nil, nil, nil, nil, nil, nil, nil, "是", nil, "是", nil, nil, nil, "是", "是", "是", nil, "是", },
		["E"] = {"mMINIMAP_ICON@default", "小地图图标", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["F"] = {"bool@default", "名称显示", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["G"] = {"mSTRING_ML@default", "提示", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["H"] = {"int@default", "客户端专属", nil, nil, nil, nil, nil, nil, nil, 1, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["I"] = {"int@default", "是否阻挡生效", nil, nil, nil, nil, nil, nil, nil, 1, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["J"] = {"bool@default", "点击触发", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["K"] = {"int@default", "AOI触发", 10, nil, nil, nil, 10, nil, 10, 10, 10, nil, nil, nil, "10", nil, nil, nil, nil, "10", 10, "10", nil, nil, nil, nil, nil, "10", nil, "10", 10, nil, "10", "10", "10", "10", "10", "10", },
		["L"] = {"string@default", "触发事件", nil, "#触发定时器(\"ByTimer1\",ARG[1],false)", "#触发怪物死亡(\"ByMonsterDie1\",ARG[1],ARG[2])", "#触发怪物死亡(\"ByMonsterDie1\",ARG[1],ARG[2])", nil, "#触发怪物死亡(\"ByMonsterDie1\",ARG[1],ARG[2])", nil, nil, nil, "#触发怪物血量为0(\"ByMonsterNoHp\",ARG[1],ARG[2])", "#触发定时器(\"ByTimer1\",ARG[1],true)", "#触发怪物血量为0(\"ByMonsterNoHp\",ARG[1],ARG[2])", nil, "#触发定时器(\"ByTimer1\",ARG[1],false)", "#触发怪物死亡(\"ByMonsterDie1\",ARG[1],ARG[2])", "#触发指定事件(\"ByEvent1\",\"WAVE_START\")", nil, nil, nil, nil, "#触发定时器(\"ByTimer1\",ARG[1],false)", "#触发怪物死亡(\"ByMonsterDie1\",ARG[1],ARG[2])", "#触发定时器(\"ByTimer1\",ARG[1],false)", "#触发怪物死亡(\"ByMonsterDie1\",ARG[1],ARG[2])", "#触发怪物血量为0(\"ByMonsterNoHp\",ARG[1],ARG[2])", nil, "#触发指定事件(\"ByEventFaint\",\"MFAINT\")", nil, nil, "#触发怪物死亡(\"ByMonsterDie1\",ARG[1],ARG[2])", nil, nil, nil, nil, nil, nil, },
		["M"] = {"table_string@default", "参数说明", "刷怪区域Id,触发器区域ID,波次", "延迟时间（秒）,刷怪区域Id,触发器区域ID,波次", "怪物Id,死亡个数,刷怪区域Id,触发器区域ID,波次", "组Id,死亡个数,位置X,位置Y,面向角度值", "坐标X, 坐标Y,面向角度值", "怪物Id,死亡个数,触发器Id", "触发器ID(可多个\",\"隔开)", nil, nil, "怪物Id,死亡个数", "定时时间(秒)", "怪物Id,死亡个数", nil, "定时时间(秒)", "怪物Id,死亡个数", "触发器ID(可多个\",\"隔开)", nil, "触发器IDs,延时时间", "刷怪区域Id", "buffId", "延迟时间(秒),音效ID,音效自定义名,音效坐标X,音效坐标Y,音效坐标Z", "怪物Id,死亡个数,音效自定义名", "延迟时间(秒),音效ID", "怪物Id,死亡个数", "怪物Id,死亡个数,触发器ID(可多个\",\"隔开)", "加血量", nil, "加OP", nil, "怪物Id,死亡个数,音效ID", nil, "buffId", "buffId", "buffId", "视距,高度,角度,切换时间", "场景资源Id", },
		["N"] = {"string@default", "条件", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["O"] = {"string@default", "出生事件", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "#设置阻挡(1)", "#设置阻挡(1)", nil, nil, nil, nil, "#设置阻挡(1)", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["P"] = {"string@default", "执行事件", "#执行区域刷怪(ARG[1]) #创建多触发器(ARG[2]) #发送波次(ARG[3])", "#执行区域刷怪(ARG[2]) #创建多触发器(ARG[3]) #发送波次(ARG[4])", "#执行区域刷怪(ARG[3]) #创建多触发器(ARG[4]) #发送波次(ARG[5])", "#执行位移(ARG[3],ARG[4],ARG[5])", "#执行位移(ARG[1],ARG[2],ARG[3])", "#创建触发器(ARG[3])", "#创建多触发器(ARG[1])", "#打开关卡系统界面()", "#播放剧情()", "#播放剧情()", "#设置阻挡(nil,true) #播放剧情()", "#设置阻挡(nil,true) #播放剧情()", "#关卡完成触发器()", "#打开转盘()", "#挂机玩法波次结束后处理()", "#创建多触发器(ARG[1])", "#设置阻挡(nil,true)", "#联动触发(ARG[1],ARG[2])", "#执行区域刷怪(ARG[1])", "#添加Buff(ARG[1])", "#播放音效(ARG[2],ARG[3],ARG[4],ARG[5],ARG[6])", "#停止音效(ARG[3])", "#播放背景音乐(ARG[2])", "#停止背景音乐()", "#创建多触发器(ARG[3],#上次触发怪物位置())", "#加血(ARG[1])", nil, "#加OP(ARG[1])", "#播放剧情()", "#播放背景音乐(ARG[3])", "#怪物进入触发器事件()", "#添加Buff(ARG[1])", "#添加Buff(ARG[1])", "#添加Buff(ARG[1])", "#设置场景镜头(ARG[1],ARG[2],ARG[3],ARG[4])", "#跳转场景(ARG[1])", },
		["Q"] = {"string@default", "离开事件", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "#删除Buff(ARG[1])", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["R"] = {"int@default", "有效次数", 1, 1, nil, nil, nil, nil, nil, "-1", 1, nil, nil, nil, "1", "1", nil, nil, nil, "1", "5", nil, nil, nil, nil, nil, nil, nil, nil, nil, 1, nil, "-1", nil, nil, nil, "-1", "1", },
		["S"] = {"string@default", "出生动作", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "op", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "bron", nil, "bron", nil, nil, nil, "bron", "bron", "bron", nil, nil, },
		["T"] = {"table_string@default", "触发动作", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "die,atk02", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "die", nil, "die", nil, nil, nil, "die", "die", "die", nil, nil, },
		["U"] = {"table_int@default", "触发特效", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "1001,1002", "1001,1002", nil, nil, nil, nil, "1001,1002", nil, "1525", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
		["V"] = {"table_string@default", "待机动作", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "idle,atk01", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, "idle", nil, "idle", nil, nil, nil, "idle", "idle", "idle", nil, nil, },
		["W"] = {"table_int@default", "待机特效", nil, nil, nil, nil, "1536", nil, nil, nil, nil, nil, "1111,1013", "1111,1013", nil, nil, nil, nil, "1111,1013", nil, "1525", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
	},
["API"] = {
		["A"] = {"string@ukey", "API名称", "触发定时器", "触发怪物死亡", "触发怪物组死亡", "触发怪物血量为0", "触发指定事件", "执行区域刷怪", "执行位移", "上次触发怪物位置", "创建触发器", "创建多触发器", "联动触发", "打开关卡系统界面", "播放剧情", "设置阻挡", "关卡完成触发器", "打开转盘", "挂机玩法波次结束后处理", "添加Buff", "删除Buff", "播放音效", "停止音效", "播放背景音乐", "停止背景音乐", "加血", "加OP", "怪物进入触发器事件", "发送波次", "设置场景镜头", "跳转场景", },
		["B"] = {"string", "执行代码", "local EventKey = Args[1] local Time = tonumber(Args[2]) local IsLoop = Args[3] TRIGGER:InitTriggerTimer(EventKey, Time, IsLoop)", "local EventKey = Args[1] local MonsterId = tonumber(Args[2] or -1) local DieCount = tonumber(Args[3] or 0) assert(DieCount > 0) TRIGGER:InitMonsterEvent(EventKey, \"MONSTER_DIE\", MonsterId, DieCount)", "local EventKey = Args[1] local GroupId = tonumber(Args[2]) local DieCount = tonumber(Args[3]) assert(DieCount > 0) TRIGGER:InitMonsterGroupEvent(EventKey, \"MONSTER_DIE\", GroupId, DieCount) ", "local EventKey = Args[1] local MonsterId = tonumber(Args[2] or -1) local DieCount = tonumber(Args[3] or 0) assert(DieCount > 0) TRIGGER:InitMonsterEvent(EventKey, \"MONSTER_NOHP\", MonsterId, DieCount)", "local EventKey = Args[1] local EventName = Args[2] assert(EventName) TRIGGER:InitAssignEvent(EventKey, EventName)", "local AreaId = tonumber(Args[1]) if not AreaId then return end TRIGGER:AddMonsterByAreaId(AreaId)", "local X = tonumber(Args[1]) local Y = tonumber(Args[2]) local Face = Args[3] and tonumber(Args[3]) or math.random(0, 360) if not X or not Y then return end TRIGGER:UserTeleport(TARGETOBJ, X, Y, Face)   ", "return TRIGGER:GetLastMonsterPos()", "local TriggerId = tonumber(Args[1]) if not TriggerId then return end TRIGGER:DynamicNewTrigger(TriggerId) ", "local StrIds = Args[1] if not StrIds then return end local Ids = string.split(StrIds, \",\") TRIGGER:CreateMoreTrigger(Ids, Args[2])", "local StrIds = Args[1] local Delay = Args[2] if not StrIds then return end local Ids = string.split(StrIds, \",\") TRIGGER:FireOtherTrigger(Ids, Delay)", "TRIGGER:OpenFuncSystemUi(\"StageView\")", "return", "local Block=Args[1] local Invert=Args[2] TRIGGER:ChangeSceneBlock(Block, Invert)", "TRIGGER:FinishStageEvent()", "TRIGGER:OpenFuncSystemUi(\"OnHookView\")", "TRIGGER:OnHookLotFinishi()", "local BuffId = tonumber(Args[1]) TRIGGER:AddBuff(TARGETOBJ, BuffId)", "local BuffId = tonumber(Args[1]) TRIGGER:DelBuff(TARGETOBJ, BuffId)", "local AudioId = tonumber(Args[1]) local AudioName = Args[2] local X = Args[3] or 0 local Y = Args[4] or 0 local Z = Args[5] or 0 TRIGGER:PlayMusic(AudioId, AudioName, X, Y, Z)", "local AudioName = Args[1] TRIGGER:StopMusic(AudioName)", "local AudioId = tonumber(Args[1]) TRIGGER:PlayBgMusic(AudioId)", "TRIGGER:StopBgMusic()", "local Hp = tonumber(Args[1]) TRIGGER:AddHpToObj(TARGETOBJ, Hp)", "local Op = tonumber(Args[1]) TRIGGER:AddOpToObj(TARGETOBJ, Op) ", "TRIGGER:OnMonsterEnter(TARGETOBJ)", "TRIGGER:SendCount(Args[1])", "local Distance = tonumber(Args[1]) local Height = tonumber(Args[2]) local Rota = tonumber(Args[3]) local ChangeTime = tonumber(Args[4]) if not Distance or not Height or not Rota then return end TRIGGER:SetSceneCamera(TARGETOBJ,Distance, Height, Rota,ChangeTime)", "local SrcId = tonumber(Args[1]) for_caller.s_switch_scene(SrcId)", },
		["C"] = {"string@default", "说明", "触发类API，定时触发", "触发类，检查怪物死亡事件", "触发类，检查怪物组死亡事件", "触发类，检查怪物血量为零", "触发类，指定事件", "根据区域Id进行刷怪", "玩家在原场景位移", "获取上次触发事件的怪物位置", "动态生成一个触发器", "创建多个触发器", "触发其它触发器", "打开关卡系统功能界面", "播放一个指定的剧情", "设置阻挡", "关卡完成", "打开战斗场景的转盘界面（在线挂机玩法使用）", "挂机玩法怪物波次结束后相关处理", nil, nil, "播放一个指定的音效", "停止一个指定的音效", "播放指定的背景音乐", "停止背景音乐", "给触发对象加血", "给触发对象加OP", "怪物进入触发器事件", "发送怪物刷新波次", "设置镜头参数", "同一副本，跳转场景", },
		["D"] = {"string@default", "例子", "#触发定时器(触发事件Key, Time,IsLoop)", "#触发怪物死亡(触发事件Key, MonsterId, Count) MonsterId不填时为所有怪物死亡都计数", "#触发某组怪物死亡(触发事件Key，GroupId，Count)", "#触发怪物血量为0(触发事件Key，MonsterId，Count)", "#触发指定事件(触发事件Key, 事件名称)", "#执行区域刷怪(ARG[1])", "#执行位移（ARG[1], ARG[2], ARG[3]）", "#上次触发怪物位置()", "#创建触发器（ARG[1])", "#创建多触发器（ARG[1], ARG[2])", "#联动触发(触发器区域ID,延迟时间)", "#打开关卡系统界面()", "#播放剧情()", "#设置阻挡(ARG[1], 反转模式)", "#关卡完成触发器()", "#打开转盘", "#挂机玩法波次结束后处理", "#添加Buff", "#删除Buff", "#播放音效(音效Id,音效名字,音效播放位置X,音效播放位置Y,音效播放位置Z)", "#停止音效(音效名字)", "#播放背景音乐(音效Id)", "#停止背景音乐()", "#加血(ARG[1])", "#加OP(ARG[1])", "#怪物进入触发器事件()", "#发送波次(ARG[1])", "#设置场景镜头(ARG[1],ARG[2],ARG[3],ARG[4])", "#跳转场景(ARG[1])", },
	},
["__SheetOrder"] = {
		["A"] = {"string", "定义", "API", "触发器_配置表", },
	},
["定义"] = {
		["A"] = {"string@ukey", "类型", "Id", "名称", "名称显示", "提示", "点击触发", "AOI触发", "触发事件", "条件", "出生事件", "执行事件", "参数说明", "离开事件", "有效次数", "造型", "特效填充", "出生动作", "小地图图标", "触发动作", "触发特效", "待机动作", "待机特效", "客户端专属", "服务器专属", "是否阻挡生效", },
		["B"] = {"string@ukey", "英文名", "Id", "Name", "IsShowName", "Tips", "IsClick", "AOIRadius", "ByEvents", "Condition", "OnBornEvent", "OnEvent", "EventTips", "OnLeaveEvent", "MaxCount", "ShapeId", "FillEffect", "BornAnim", "MiniMapIcon", "TriggerAnim", "TriggerEffect", "StandAnim", "StandEffect", "OnlyClient", "IsServer", "Stop", },
		["C"] = {"string@default", "导出类型", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, },
	},
}